{
  "swagger": "2.0",
  "basePath": "/",
  "info": {
    "title": "API",
    "description": "API Documnetuon for the Form Recognizer service",
    "version": "1.0"
  },
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/v1/ocr/analyze": {
      "post": {
        "description": "API used by the service-now team",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UploadResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/500ErrorResponse"
            }
          }
        },
        "operationId": "post_analyze_resource",
        "parameters": [
          {
            "name": "X-API-Key",
            "required": true,
            "in": "header",
            "type": "string",
            "description": "Uploaded file"
          },
          {
            "name": "payload",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UploadRequest"
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "ocr"
        ]
      }
    },
    "/api/v1/ocr/analyze-doc": {
      "post": {
        "description": "API used by the react UI",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UploadResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/500ErrorResponse"
            }
          }
        },
        "operationId": "post_upload_resource",
        "parameters": [
          {
            "name": "cover_type",
            "in": "formData",
            "type": "string",
            "required": true,
            "description": "Cover type fo the uploading document [public, product or professional]"
          },
          {
            "name": "doc",
            "in": "formData",
            "type": "file",
            "required": true,
            "description": "Uploaded file"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "ocr"
        ]
      }
    },
    "/api/v1/user/login": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/500ErrorResponse"
            }
          }
        },
        "operationId": "post_login_resource",
        "parameters": [
          {
            "name": "username",
            "required": true,
            "in": "header",
            "type": "string",
            "description": "username"
          },
          {
            "name": "password",
            "required": true,
            "in": "header",
            "type": "string",
            "description": "password"
          }
        ],
        "tags": [
          "user"
        ]
      }
    },
    "/api/v1/user/logout": {
      "post": {
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/401ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/500ErrorResponse"
            }
          }
        },
        "operationId": "user_logout",
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "user"
        ]
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "tags": [
    {
      "name": "user",
      "description": "User access controls"
    },
    {
      "name": "ocr",
      "description": "OCR apis"
    }
  ],
  "definitions": {
    "LoginResponse": {
      "properties": {
        "access_token": {
          "type": "string",
          "description": "Access Token"
        }
      },
      "type": "object"
    },
    "400ErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "example": 400
        },
        "type": {
          "type": "string",
          "example": "bad_request"
        },
        "msg": {
          "type": "string"
        }
      }
    },
    "500ErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "example": 500
        },
        "type": {
          "type": "string",
          "example": "internal_error"
        },
        "msg": {
          "type": "string"
        }
      }
    },
    "401ErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "example": 401
        },
        "type": {
          "type": "string",
          "example": "unauthorized"
        },
        "msg": {
          "type": "string"
        }
      }
    },
    "UploadRequest": {
      "properties": {
        "cover_type": {
          "type": "string",
          "description": "Cover type fo the uploading document [public, product or professional]"
        },
        "filename": {
          "type": "string",
          "description": "Name of the uploaded file"
        },
        "content_length": {
          "type": "number",
          "description": "Sized of the uploading file"
        },
        "file": {
          "type": "string",
          "description": "Base64 encoded file"
        }
      },
      "type": "object"
    },
    "UploadResponse": {
      "type": "object",
      "properties": {
        "created_on": {
          "type": "string",
          "format": "date-time"
        },
        "expected_fields": {
          "type": "object",
          "properties": {
            "service_now_key": {
              "type": "object",
              "properties": {
                "confidence": {
                  "type": "number"
                },
                "parsers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "input": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "output": {
                        "type": "string"
                      },
                      "parms": {
                        "type": "string"
                      },
                      "status": {
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  }
                },
                "raw_value": {
                  "type": "string"
                },
                "raw_value_type": {
                  "type": "string"
                },
                "validations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "input": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "output": {
                        "type": "string"
                      },
                      "parms": {
                        "type": "string"
                      },
                      "status": {
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  }
                },
                "value": {
                  "type": "string",
                  "format": "date-time"
                },
                "value_type": {
                  "type": "string"
                }
              }
            }
          }
        },
        "model_id": {
          "type": "string"
        },
        "request_id": {
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "ParseError": {
      "description": "When a mask can't be parsed"
    },
    "MaskError": {
      "description": "When any error occurs on mask"
    }
  }
}